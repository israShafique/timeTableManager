
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Isra Shafique
 */
public class addSubjectInTable extends javax.swing.JFrame {
int val;int i=0; addSubjectInTable subjects[] ;String tableName="";
    /**
     * Creates new form addSubjectInTable
     * @param tb
     */
    public addSubjectInTable(String tb) {
        initComponents();
         setSize(999,580);
        setLocation(200,50);
        tableName=tb;
         try{  
            Class.forName("com.mysql.jdbc.Driver");  
            Connection con=DriverManager.getConnection(  
                "jdbc:mysql://localhost:3306/timetable?zeroDateTimeBehavior=convertToNull","root","");  
//here sonoo is database name, root is username and password  
                Statement stmt=con.createStatement();  
                ResultSet rs=stmt.executeQuery("select name from teacher");  
                while(rs.next())  
                {if(!rs.getString("name").isEmpty())
                {jComboBox1.addItem(rs.getString("name"));
                }}
                }catch(Exception e){ System.out.println(e);}  
          try{  
            Class.forName("com.mysql.jdbc.Driver");  
            Connection con=DriverManager.getConnection(  
                "jdbc:mysql://localhost:3306/timetable?zeroDateTimeBehavior=convertToNull","root","");  
//here sonoo is database name, root is username and password  
                Statement stmt=con.createStatement();  
                ResultSet rs=stmt.executeQuery("select name from subject");  
                while(rs.next())  
                {if(!rs.getString("name").isEmpty())
                {jComboBox2.addItem(rs.getString("name"));
                
                }}
                }catch(Exception e){ System.out.println(e);}  
                 try{  
            Class.forName("com.mysql.jdbc.Driver");  
            Connection con=DriverManager.getConnection(  
                "jdbc:mysql://localhost:3306/timetable?zeroDateTimeBehavior=convertToNull","root","");  
//here sonoo is database name, root is username and password  
                Statement stmt=con.createStatement();  
                ResultSet rs=stmt.executeQuery("select name from classRoom");  
                while(rs.next())  
                {if(!rs.getString("name").isEmpty())
                {jComboBox3.addItem(rs.getString("name"));
                }}
                con.close();
                 }catch(Exception e){ System.out.println(e);}  
                 String teacher=(String)(jComboBox1.getSelectedItem());
                             String classroom=(String)(jComboBox3.getSelectedItem());

         String day=(String)(jComboBox4.getSelectedItem());
         jComboBox5.removeAllItems();

         try{  
            Class.forName("com.mysql.jdbc.Driver");  
            Connection con=DriverManager.getConnection(  
                "jdbc:mysql://localhost:3306/timetable?zeroDateTimeBehavior=convertToNull","root","");  
                Statement stmt=con.createStatement();  
                ResultSet rs=stmt.executeQuery("select time from timeslots where ID NOT in( select timeid from clashtime where (teacher = '"+teacher+
                       "' or class = '"+classroom+"' or teacher='"+tableName+"' ) and day = '"+day+"')");  
                
                while(rs.next())  
                {
                       {if(!rs.getString("time").isEmpty())
                             
                    jComboBox5.addItem(rs.getString("time"));   }
                }
                con.close();
                 }catch(Exception e){ System.out.println(e);}  
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 0, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("               ADD SUJECTS IN TIME TABLE");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ADD TEACHER:");

        jComboBox1.setMaximumRowCount(100);
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ADD SUBJECT:");

        jComboBox2.setMaximumRowCount(100);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("ADD CLASSROOM:");

        jComboBox3.setMaximumRowCount(100);
        jComboBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox3ItemStateChanged(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setForeground(new java.awt.Color(0, 204, 255));
        jButton1.setText("ADD SUBJECT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("DAY:");

        jComboBox4.setMaximumRowCount(6);
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY" }));
        jComboBox4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox4ItemStateChanged(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setForeground(new java.awt.Color(102, 0, 0));
        jButton3.setText("<-----");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("TIME SLOTS:");

        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setText("BREAK");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(307, 307, 307)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE))
                                .addGap(47, 47, 47)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(23, 23, 23)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox4, 0, 251, Short.MAX_VALUE)
                                    .addComponent(jComboBox5, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(428, 428, 428)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(196, 196, 196)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(450, 450, 450)
                        .addComponent(jCheckBox1)))
                .addContainerGap(227, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
int sh,sm,fh,fm;                                    
                String time;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 String selectedTime =(String)jComboBox5.getSelectedItem();
     int sh=0,sm=0,fh=0,fm=0;
     String teacher,classroom,subject,day;
     if(!jCheckBox1.isSelected())
     {
        teacher=(String)jComboBox1.getSelectedItem();  
              subject=      (String)jComboBox2.getSelectedItem();  
                  classroom=  (String)jComboBox3.getSelectedItem();
                  day=(String)jComboBox4.getSelectedItem();
     }
     else
     {
          teacher=tableName;
              subject="break" ;  
                  classroom="break"; 
                  day=(String)jComboBox4.getSelectedItem();
     }
 try{  
            Class.forName("com.mysql.jdbc.Driver");  
            Connection con=DriverManager.getConnection(  
                "jdbc:mysql://localhost:3306/timetable?zeroDateTimeBehavior=convertToNull","root","");  
                Statement stmt=con.createStatement();  
                ResultSet rs=stmt.executeQuery("select shour,smin,fhour,fmin from timeslots where time='"+selectedTime+"'");  
                while(rs.next())  
                {
                       sh=rs.getInt("shour");
                       sm=rs.getInt("smin");
                       fh=rs.getInt("fhour");
                       fm=rs.getInt("fmin");
                }
                con.close();
                 }catch(Exception e){ System.out.println(e);} 
 try{
                String query2;String query3;
                Class.forName("com.mysql.jdbc.Driver");
                Connection con=DriverManager.getConnection(
                        "jdbc:mysql://localhost:3306/timetable?zeroDateTimeBehavior=convertToNull","root","");
                Statement stmt=con.createStatement();
                ResultSet rs=stmt.executeQuery("select shour,smin,fhour,fmin,ID from timeslots");  
                while(rs.next())
                {
                        if(rs.getInt("shour")>sh&&rs.getInt("shour")<fh)
                        {
                            query2 = " insert into clashtime (shour,smin,fhour,fmin,day,teacher,class,timeid)"
                            + " values (?, ?,?,?,?,?,?,?)";
                    PreparedStatement preparedStmt = con.prepareStatement(query2);
                    preparedStmt.setInt(1,rs.getInt("shour"));  
                    preparedStmt.setInt(2,rs.getInt("smin"));  
                    preparedStmt.setInt(3,rs.getInt("fhour"));  
                    preparedStmt.setInt(4,rs.getInt("fmin"));  
                    preparedStmt.setString(5,day);  
                    preparedStmt.setString(6,teacher);  
                    preparedStmt.setString(7,classroom);  
                    preparedStmt.setInt(8,rs.getInt("ID"));  
                            System.out.println("chaley");
                    preparedStmt.execute();
                     


                        }
                        else if(rs.getInt("shour")==sh&&rs.getInt("smin")>sm&&rs.getInt("shour")<fh)
                        {
                            query2 = " insert into clashtime (shour,smin,fhour,fmin,day,teacher,class,timeid)"
                            + " values (?, ?,?,?,?,?,?,?)";
                    PreparedStatement preparedStmt = con.prepareStatement(query2);
                    preparedStmt.setInt(1,rs.getInt("shour"));  
                    preparedStmt.setInt(2,rs.getInt("smin"));  
                    preparedStmt.setInt(3,rs.getInt("fhour"));  
                    preparedStmt.setInt(4,rs.getInt("fmin"));  
                     preparedStmt.setString(5,day);  
                    preparedStmt.setString(6,teacher);  
                    preparedStmt.setString(7,classroom);   
                    preparedStmt.setInt(8,rs.getInt("ID"));  
                                                System.out.println("chaley");
                    preparedStmt.execute();

                            
                        }
                        else if(rs.getInt("shour")==sh&&rs.getInt("smin")>sm&&rs.getInt("shour")==fh&&rs.getInt("smin")<fm)
                        {
                            query2 = " insert into clashtime (shour,smin,fhour,fmin,day,teacher,class,timeid)"
                            + " values (?, ?,?,?,?,?,?,?)";
                    PreparedStatement preparedStmt = con.prepareStatement(query2);
                    preparedStmt.setInt(1,rs.getInt("shour"));  
                    preparedStmt.setInt(2,rs.getInt("smin"));  
                    preparedStmt.setInt(3,rs.getInt("fhour"));  
                    preparedStmt.setInt(4,rs.getInt("fmin"));  
                      preparedStmt.setString(5,day);  
                    preparedStmt.setString(6,teacher);  
                    preparedStmt.setString(7,classroom);  
                    preparedStmt.setInt(8,rs.getInt("ID"));  
                                                System.out.println("chaley");
                    preparedStmt.execute();

                            
                        }
                        else if(sh>rs.getInt("shour")&&sh<rs.getInt("fhour"))
                        {
                            query2 = " insert into clashtime (shour,smin,fhour,fmin,day,teacher,class,timeid)"
                            + " values (?, ?,?,?,?,?,?,?)";
                    PreparedStatement preparedStmt = con.prepareStatement(query2);
                    preparedStmt.setInt(1,rs.getInt("shour"));  
                    preparedStmt.setInt(2,rs.getInt("smin"));  
                    preparedStmt.setInt(3,rs.getInt("fhour"));  
                    preparedStmt.setInt(4,rs.getInt("fmin"));  
                     preparedStmt.setString(5,day);  
                    preparedStmt.setString(6,teacher);  
                    preparedStmt.setString(7,classroom);  
                    preparedStmt.setInt(8,rs.getInt("ID"));  
                                                System.out.println("chaley");

                                                preparedStmt.execute();

                        }
                        else if(sh==rs.getInt("shour")&&sm>rs.getInt("smin")&&sh<rs.getInt("fhour"))
                        {
                            query2 = " insert into clashtime (shour,smin,fhour,fmin,day,teacher,class,timeid)"
                            + " values (?, ?,?,?,?,?,?,?)";
                    PreparedStatement preparedStmt = con.prepareStatement(query2);
                    preparedStmt.setInt(1,rs.getInt("shour"));  
                    preparedStmt.setInt(2,rs.getInt("smin"));  
                    preparedStmt.setInt(3,rs.getInt("fhour"));  
                    preparedStmt.setInt(4,rs.getInt("fmin"));  
                     preparedStmt.setString(5,day);  
                    preparedStmt.setString(6,teacher);  
                    preparedStmt.setString(7,classroom);  
                    preparedStmt.setInt(8,rs.getInt("ID"));  
                                                System.out.println("chaley");
                    preparedStmt.execute();

                            
                        }
                        else if(rs.getInt("shour")==sh&&rs.getInt("smin")<sm&&rs.getInt("shour")==fh&&rs.getInt("fmin")>sm)
                        {
query2 = " insert into clashtime (shour,smin,fhour,fmin,day,teacher,class,timeid)"
                            + " values (?, ?,?,?,?,?,?,?)";
                    PreparedStatement preparedStmt = con.prepareStatement(query2);
                    preparedStmt.setInt(1,rs.getInt("shour"));  
                    preparedStmt.setInt(2,rs.getInt("smin"));  
                    preparedStmt.setInt(3,rs.getInt("fhour"));  
                    preparedStmt.setInt(4,rs.getInt("fmin"));  
                     preparedStmt.setString(5,day);  
                    preparedStmt.setString(6,teacher);  
                    preparedStmt.setString(7,classroom);   
                    preparedStmt.setInt(8,rs.getInt("ID"));  
                                                System.out.println("chaley");
                    preparedStmt.execute();

                        }
                        else if(sh==rs.getInt("shour")&&sm==rs.getInt("smin"))
                        {
                            query2 = " insert into clashtime (shour,smin,fhour,fmin,day,teacher,class,timeid)"
                            + " values (?, ?,?,?,?,?,?,?)";
                    PreparedStatement preparedStmt = con.prepareStatement(query2);
                    preparedStmt.setInt(1,rs.getInt("shour"));  
                    preparedStmt.setInt(2,rs.getInt("smin"));  
                    preparedStmt.setInt(3,rs.getInt("fhour"));  
                    preparedStmt.setInt(4,rs.getInt("fmin"));  
                     preparedStmt.setString(5,day);  
                    preparedStmt.setString(6,teacher);  
                    preparedStmt.setString(7,classroom);   
                    preparedStmt.setInt(8,rs.getInt("ID")); 
                                                System.out.println("chaley");
                    preparedStmt.execute();

                            
                        }
                        else if(fh==rs.getInt("shour")&&fm>rs.getInt("smin")&&fh<rs.getInt("fhour"))
                        {
                         query2 = " insert into clashtime (shour,smin,fhour,fmin,day,teacher,class,timeid)"
                            + " values (?, ?,?,?,?,?,?,?)";
                    PreparedStatement preparedStmt = con.prepareStatement(query2);
                    preparedStmt.setInt(1,rs.getInt("shour"));  
                    preparedStmt.setInt(2,rs.getInt("smin"));  
                    preparedStmt.setInt(3,rs.getInt("fhour"));  
                    preparedStmt.setInt(4,rs.getInt("fmin"));  
                    preparedStmt.setString(5,day);  
                    preparedStmt.setString(6,teacher);  
                    preparedStmt.setString(7,classroom);  
                    preparedStmt.setInt(8,rs.getInt("ID")); 
                                                System.out.println("chaley");

                                                   preparedStmt.execute();

                        }
                         else if(fh==rs.getInt("shour")&&fm>rs.getInt("smin")&&fh==rs.getInt("fhour")&&fm<rs.getInt("fmin"))
                        {
                         query2 = " insert into clashtime (shour,smin,fhour,fmin,day,teacher,class,timeid)"
                            + " values (?, ?,?,?,?,?,?,?)";
                    PreparedStatement preparedStmt = con.prepareStatement(query2);
                    preparedStmt.setInt(1,rs.getInt("shour"));  
                    preparedStmt.setInt(2,rs.getInt("smin"));  
                    preparedStmt.setInt(3,rs.getInt("fhour"));  
                    preparedStmt.setInt(4,rs.getInt("fmin"));  
                     preparedStmt.setString(5,day);  
                    preparedStmt.setString(6,teacher);  
                    preparedStmt.setString(7,classroom);  
                    preparedStmt.setInt(8,rs.getInt("ID"));  
                                        preparedStmt.execute();

                        }   
                       
                }
                query3 = " insert into "+tableName +" (day,teacher,subject,class,timeslot,shour,smin)"
                            + " values (?, ?,?,?,?,?,?)";
                    
                    PreparedStatement preparedStmt2 = con.prepareStatement(query3);
                    preparedStmt2.setString(1, day);
                    preparedStmt2.setString (2, teacher);
                    preparedStmt2.setString (3, subject);
                    preparedStmt2.setString (4, classroom);
                    preparedStmt2.setString (5, (String)jComboBox5.getSelectedItem());
                     preparedStmt2.setInt (6, sh);
                    preparedStmt2.setInt(7, sm);
                    preparedStmt2.execute();
            }catch(Exception e){ System.out.println(e);} 
 JOptionPane.showMessageDialog(null, "Subject Added");
 setVisible(false);
 timeTable tb=new timeTable(tableName);
 tb.setVisible(true);

          /* int flag=0;int flag2=0,flag6=0;.
                   int sh=(int)jSpinner1.getValue();
                   int sm=(int)jSpinner2.getValue();
                   int dh=(int)jSpinner4.getValue();
                   
                   int dm=(int)jSpinner5.getValue();
                   int fh=sh+dh;
                   
                   int fm=sm+dm;
                   System.out.println(fm);
                           
                   
               if(dh>5||sm>60||sh>23||sm>60||(dm<=0&&dh<=0))
               {
                         JOptionPane.showMessageDialog(null, "invalid time");

               }
               else{
        try{
            String teacher=(String)(jComboBox1.getSelectedItem());
            String subject=(String)(jComboBox2.getSelectedItem());
            String classroom=(String)(jComboBox3.getSelectedItem());
            String day=(String)(jComboBox4.getSelectedItem());int ID2 = 0;int classID=0;int teacherID=0;
            int flag4=0;int tableID=0;
            
            try{
                Class.forName("com.mysql.jdbc.Driver");
                Connection con=DriverManager.getConnection(
                        "jdbc:mysql://localhost:3306/timetable?zeroDateTimeBehavior=convertToNull","root","");
                Statement stmt=con.createStatement();
                ResultSet rs=stmt.executeQuery("select name,sh,sm,fh,fm,day,ID from teachertime");  
                while(rs.next())
                {if(rs.getString("name").equals(teacher))
                {
                    if(rs.getString("day").equals(day))
                    {
                        if(rs.getInt("sh")>sh&&rs.getInt("sh")<fh)
                        {
                            flag=1;System.out.println("here1");teacherID=rs.getInt("ID");
                        }
                        else if(rs.getInt("sh")==sh&&rs.getInt("sm")>sm&&rs.getInt("sh")<fh)
                        {
                            teacherID=rs.getInt("ID");     System.out.println("here2");   flag=1;
                            
                        }
                        else if(rs.getInt("sh")==sh&&rs.getInt("sm")>sm&&rs.getInt("sh")==fh&&rs.getInt("sm")<fm)
                        {
                            teacherID=rs.getInt("ID");    System.out.println("here3");       flag=1;
                            
                        }
                        else if(sh>rs.getInt("sh")&&sh<rs.getInt("fh"))
                        {
                            teacherID=rs.getInt("ID");     System.out.println("here4");          flag=1;
                            
                        }
                        else if(sh==rs.getInt("sh")&&sm>rs.getInt("sm")&&sh<rs.getInt("fh"))
                        {
                            teacherID=rs.getInt("ID");   System.out.println("here5");        flag=1;
                            
                        }
                        else if(rs.getInt("sh")==sh&&rs.getInt("sm")<sm&&rs.getInt("sh")==fh&&rs.getInt("fm")>sm)
                        {
                            teacherID=rs.getInt("ID");    System.out.println("here6");       flag=1;
                            
                        }
                        else if(sh==rs.getInt("sh")&&sm==rs.getInt("sm"))
                        {
                            teacherID=rs.getInt("ID");     System.out.println("here7");      flag=1;
                            
                        }
                        else if(fh==rs.getInt("sh")&&fm>rs.getInt("sm")&&fh<rs.getInt("fh"))
                        {
                         teacherID=rs.getInt("ID");     System.out.println("here7");      flag=1;
                               
                        }
                         else if(fh==rs.getInt("sh")&&fm>rs.getInt("sm")&&fh==rs.getInt("fh")&&fm<rs.getInt("fm"))
                        {
                         teacherID=rs.getInt("ID");     System.out.println("here7");      flag=1;
                               
                        }
                    }
                }}
            }catch(Exception e){ System.out.println(e);}
           
           
            int flag10=0,flag11=0;
            Class.forName("com.mysql.jdbc.Driver");
            Connection con2=DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/timetable?zeroDateTimeBehavior=convertToNull","root","");
            if(flag==1)
             {         
             
            
            int YesOrNo = JOptionPane.showConfirmDialog(null,"There is a clash with teachers time\n"
                    + "Do You still want to replace","relpace", JOptionPane.YES_NO_OPTION);
            if(YesOrNo==0)
            {System.out.println("teacher clash");
                String sem2="";int semid2=0;flag4=1;
                 Statement stmt5=con2.createStatement();
                 System.out.println(teacherID);
                String query6="select sem,Semid from teachertime where ID = " +teacherID+"";
                 ResultSet rs9=stmt5.executeQuery(query6);
                 while(rs9.next())
                 {
                    sem2= rs9.getString("sem");
                    semid2= rs9.getInt("Semid");
                 }
                   PreparedStatement pt =con2.prepareStatement("delete from "+sem2+" where ID= "+semid2+"");
                pt.executeUpdate();
                PreparedStatement pt2 =con2.prepareStatement("delete from teachertime where ID= "+teacherID+"");
                pt2.executeUpdate();
                 PreparedStatement pt3 =con2.prepareStatement("delete from classtime where SemID= "+semid2+" and sem = ?");
                 pt3.setString(1,tableName);
                pt3.executeUpdate();
               
            }
            else
            {
                flag4=-1;
                System.out.println("cnjkc");
            }
            }
             try{
                Class.forName("com.mysql.jdbc.Driver");
                Connection con=DriverManager.getConnection(
                        "jdbc:mysql://localhost:3306/timetable?zeroDateTimeBehavior=convertToNull","root","");
                Statement stmt=con.createStatement();
                ResultSet rs=stmt.executeQuery("select name,sh,sm,fh,fm,day,ID  from classtime");
                while(rs.next())  
                {if(rs.getString("name").equals(classroom))
                {
                    if(rs.getString("day").equals(day))
                    {
                        if(rs.getInt("sh")>sh&&rs.getInt("sh")<fh)
                        {
                            flag2=1;classID=rs.getInt("ID");
                        }
                        else if(rs.getInt("sh")==sh&&rs.getInt("sm")>sm&&rs.getInt("sh")<fh)
                        {
                            classID=rs.getInt("ID");        flag2=1;
                            
                        }
                        else if(rs.getInt("sh")==sh&&rs.getInt("sm")>sm&&rs.getInt("sh")==fh&&rs.getInt("sm")<fm)
                        {
                            classID=rs.getInt("ID");                   flag2=1;
                            
                        }
                        else if(sh>rs.getInt("sh")&&sh<rs.getInt("fh"))
                        {
                            classID=rs.getInt("ID");                   flag2=1;
                            
                        }
                        else if(sh==rs.getInt("sh")&&sm>rs.getInt("sm")&&sh<rs.getInt("fh"))
                        {
                            classID=rs.getInt("ID");                   flag2=1;
                            
                        }
                        else if(rs.getInt("sh")==sh&&rs.getInt("sm")<sm&&rs.getInt("sh")==fh&&rs.getInt("fm")>sm)
                        {
                            classID=rs.getInt("ID");                     flag2=1;
                            
                        }
                        else if(sh==rs.getInt("sh")&&sm==rs.getInt("sm"))
                        {
                            classID=rs.getInt("ID");                   flag2=1;
                            
                        }
                       else if(fh==rs.getInt("sh")&&fm>rs.getInt("sm")&&fh<rs.getInt("fh"))
                        {
                        classID=rs.getInt("ID");                   flag2=1;
                               
                        }
                         else if(fh==rs.getInt("sh")&&fm>rs.getInt("sm")&&fh==rs.getInt("fh")&&fm<rs.getInt("fm"))
                        {
                         classID=rs.getInt("ID");                   flag2=1;
                               
                        }
                    }
                }} 
            }catch(Exception e){ System.out.println(e);}
            if (flag2==1)
            {         
            System.out.println("class clash");
            int YesOrNo = JOptionPane.showConfirmDialog(null,"There is a clash with classroom time\n"
                    + "Do You still want to replace","relpace", JOptionPane.YES_NO_OPTION);
            if(YesOrNo==0)
            {String sem2="";int semid2=0;flag10=1;
                 Statement stmt5=con2.createStatement();
                String query6="select sem,semid from classtime where ID = " +classID+"";
                                System.out.println("fsdfd1 clash");

                 ResultSet rs9=stmt5.executeQuery(query6);
                 while(rs9.next())
                 {
                    sem2= rs9.getString("sem");
                    semid2= rs9.getInt("semid");
                                  

                 }
                 if(semid2!=0)
                 { PreparedStatement pt =con2.prepareStatement("delete from "+sem2+" where ID= "+semid2+"");
                pt.executeUpdate();}
                                System.out.println("fsdfd2 clash");

                 PreparedStatement pt2 =con2.prepareStatement("delete from classtime where ID= "+classID+"");
                pt2.executeUpdate();
                                System.out.println("fsdfd3 clash");
                    if(semid2!=0)
                 {
                 PreparedStatement pt3 =con2.prepareStatement("delete from teachertime where SemID= "+semid2+" and sem = ?");
                 pt3.setString(1,tableName);
                pt3.executeUpdate();
               }
                System.out.println("fsdfd 4clash");
            }
            else
            {
                flag10=-1;System.out.println("fdfaadadaadad");
                        
            }
            }
             try{
                Class.forName("com.mysql.jdbc.Driver");
                Connection con=DriverManager.getConnection(
                        "jdbc:mysql://localhost:3306/timetable?zeroDateTimeBehavior=convertToNull","root","");
                Statement stmt=con.createStatement();
                ResultSet rs=stmt.executeQuery("select shour,smin,fhour,fmin,day,ID  from "+tableName);
                while(rs.next())  
                {
                    if(rs.getString("day").equals(day))
                    {
                        if(rs.getInt("shour")>sh&&rs.getInt("shour")<fh)
                        {
                            flag6=1;tableID=rs.getInt("ID");
                        }
                        else if(rs.getInt("shour")==sh&&rs.getInt("smin")>sm&&rs.getInt("shour")<fh)
                        {
                               flag6=1;tableID=rs.getInt("ID");
                            
                        }
                        else if(rs.getInt("shour")==sh&&rs.getInt("smin")>sm&&rs.getInt("shour")==fh&&rs.getInt("smin")<fm)
                        {
                                              flag6=1;tableID=rs.getInt("ID");
                            
                        }
                        else if(sh>rs.getInt("shour")&&sh<rs.getInt("fhour"))
                        {
                                     tableID=rs.getInt("ID");         flag6=1;
                            
                        }
                        else if(sh==rs.getInt("shour")&&sm>rs.getInt("smin")&&sh<rs.getInt("fhour"))
                        {
                                    tableID=rs.getInt("ID");       flag6=1;
                            
                        }
                        else if(rs.getInt("shour")==sh&&rs.getInt("smin")<sm&&rs.getInt("shour")==fh&&rs.getInt("fmin")>sm)
                        {
                                         tableID=rs.getInt("ID");       flag6=1;
                            
                        }
                        else if(sh==rs.getInt("shour")&&sm==rs.getInt("smin"))
                        {
                                         tableID=rs.getInt("ID");     flag6=1;
                            
                        }
                         else if(fh==rs.getInt("shour")&&fm>rs.getInt("smin")&&fh<rs.getInt("fhour"))
                        {
                         tableID=rs.getInt("ID");     flag6=1;
                               
                        }
                         else if(fh==rs.getInt("shour")&&fm>rs.getInt("smin")&&fh==rs.getInt("fhour")&&fm<rs.getInt("fmin"))
                        {
                         tableID=rs.getInt("ID");     flag6=1;
                               
                        }
                    
                }}
            }catch(Exception e){ System.out.println(e);}
             if (flag6==1)
            {           
            int YesOrNo = JOptionPane.showConfirmDialog(null,"  There is already a class at this time\n"
                    + "Do You still want to replace","relpace", JOptionPane.YES_NO_OPTION);
            if(YesOrNo==0)
            {flag11=1;
                 PreparedStatement pt =con2.prepareStatement("delete from "+tableName+" where ID= "+tableID+"");
                pt.executeUpdate();
                  PreparedStatement pt3 =con2.prepareStatement("delete from teachertime where SemID= "+tableID+" and sem = ?");
                  pt3.setString(1,tableName);
                pt3.executeUpdate();
                 PreparedStatement pt4 =con2.prepareStatement("delete from classtime where SemID= "+tableID+" and sem =?");
                 pt4.setString(1,tableName);
                pt4.executeUpdate();
            }
            else
            {
                flag11=-1;
            }
            }con2.close();
             if((flag==0&&flag2==0)||(flag4==1||flag10==1||flag11==1))
            {                        
                System.out.println("check sub");
                int flag3=0;
                try{
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con=DriverManager.getConnection(
                            "jdbc:mysql://localhost:3306/timetable?zeroDateTimeBehavior=convertToNull","root","");
                    Statement stmt=con.createStatement();
                    String query="select subject,day from "+tableName+"";
                    ResultSet rs=stmt.executeQuery(query);
                    while(rs.next())
                    {
                        if(rs.getString("subject").equals(subject)&&rs.getString("day").equals(day))
                        {
                            flag3=1;
                            JOptionPane.showMessageDialog(null, "subject has already been added in this semester's time table");
                        }
                        
                    }
                    if((flag3==0&&flag==0&&flag2==0)||(flag4==1||flag10==1||flag11==1)&&(flag4!=-1&&flag10!=-1&&flag11!=-1))
                    { i=i+1;  
                        System.out.println("insert sub");
                        String query2 = " insert into "+tableName +" (day,teacher,subject,class,shour,smin,fhour,fmin)"
                            + " values (?, ?,?,?,?,?,?,?)";
                    String st=""+sh+":"+sm+"";
                    String ft=""+fh+":"+fm+"";
                    PreparedStatement preparedStmt = con.prepareStatement(query2);
                    preparedStmt.setString(1,day);
                    preparedStmt.setString (2, teacher);
                    preparedStmt.setString(3, subject);
                    preparedStmt.setString(4, classroom);
                    preparedStmt.setInt(5,sh);
                    preparedStmt.setInt(6,sm);
                    preparedStmt.setInt(7,fh);
                    preparedStmt.setInt(8,fm);
                    
                    preparedStmt.execute();
                    
                    JOptionPane.showMessageDialog(null, "subject has been added in time table ");
                     Class.forName("com.mysql.jdbc.Driver");
                     Connection con3=DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/timetable?zeroDateTimeBehavior=convertToNull","root","");
                    Statement stmt2=con3.createStatement();
                    String query3="select ID from "+tableName+"";
                    ResultSet rs6=stmt2.executeQuery(query3);
                    while(rs6.next())
                    {
                        ID2=rs6.getInt("ID");
                    }

                    try{
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con10=DriverManager.getConnection(
                            "jdbc:mysql://localhost:3306/timetable?zeroDateTimeBehavior=convertToNull","root","");
                    String query10 = " insert into classtime (name,sh,sm,fh,fm,day,sem,semid)"
                            + " values (?, ?,?,?,?,?,?,?)";
                    PreparedStatement preparedStmt1 = con10.prepareStatement(query10);
                    preparedStmt1.setString(1,classroom);
                    preparedStmt1.setInt (2,sh);
                    preparedStmt1.setInt (3,sm);
                    preparedStmt1.setInt (4,fh);
                    preparedStmt1.setInt(5,fm);
                    preparedStmt1.setString(6,day);
                    preparedStmt1.setString(7,tableName);
                    preparedStmt1.setInt(8,ID2);
                    preparedStmt1.execute();
                }catch(Exception e){ System.out.println(e);
                }
                    try{
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con11=DriverManager.getConnection(
                            "jdbc:mysql://localhost:3306/timetable?zeroDateTimeBehavior=convertToNull","root","");
                    String query23 = " insert into teachertime (name,sh,sm,fh,fm,day,sem,semid)"
                            + " values (?, ?,?,?,?,?,?,?)";
                    PreparedStatement preparedStmt2 = con11.prepareStatement(query23);
                    preparedStmt2.setString(1,teacher);
                    preparedStmt2.setInt (2,sh);
                    preparedStmt2.setInt (3,sm);
                    preparedStmt2.setInt (4,fh);
                    preparedStmt2.setInt(5,fm);
                    preparedStmt2.setString(6,day);
                    preparedStmt2.setString(7,tableName);
                    preparedStmt2.setInt(8,ID2);
                    preparedStmt2.execute();
                }catch(Exception e){ System.out.println(e);
                }
                    }
                }catch(Exception e){ System.out.println(e);
                }       
            }
                setVisible(false);
                timeTable table=new timeTable(tableName);
                table.setVisible(true);
            
        }catch(ClassNotFoundException ex){ Logger.getLogger(addSubjectInTable.class.getName()).log(Level.SEVERE, null,ex);} catch (SQLException ex) {
                Logger.getLogger(addSubjectInTable.class.getName()).log(Level.SEVERE, null, ex);
            }
               
               }*/
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
            setVisible(false);
            noOfSubjects ss= new noOfSubjects(tableName);
            ss.setVisible(true);



        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox4ItemStateChanged
jComboBox5.removeAllItems();

String teacher=(String)(jComboBox1.getSelectedItem());
                             String classroom=(String)(jComboBox3.getSelectedItem());

         String day=(String)(jComboBox4.getSelectedItem());
         try{  
            Class.forName("com.mysql.jdbc.Driver");  
            Connection con=DriverManager.getConnection(  
                "jdbc:mysql://localhost:3306/timetable?zeroDateTimeBehavior=convertToNull","root","");  
                Statement stmt=con.createStatement();  
                ResultSet rs=stmt.executeQuery("select time from timeslots where ID NOT in( select timeid from clashtime where (teacher = '"+teacher+
                       "' or class = '"+classroom+"' or teacher='"+tableName+"' ) and day = '"+day+"')");  
                
                while(rs.next())  
                {
                       {if(!rs.getString("time").isEmpty())
                             
                    jComboBox5.addItem(rs.getString("time"));   }
                }
                con.close();
                 }catch(Exception e){ System.out.println(e);}  



        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4ItemStateChanged

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
       jComboBox5.removeAllItems();

String teacher=(String)(jComboBox1.getSelectedItem());
                             String classroom=(String)(jComboBox3.getSelectedItem());

         String day=(String)(jComboBox4.getSelectedItem());
         try{  
            Class.forName("com.mysql.jdbc.Driver");  
            Connection con=DriverManager.getConnection(  
                "jdbc:mysql://localhost:3306/timetable?zeroDateTimeBehavior=convertToNull","root","");  
                Statement stmt=con.createStatement();  
                ResultSet rs=stmt.executeQuery("select time from timeslots where ID NOT in( select timeid from clashtime where (teacher = '"+teacher+
                       "' or class = '"+classroom+"' or teacher='"+tableName+ "' ) and day = '"+day+"')");  
                
                while(rs.next())  
                {
                       {if(!rs.getString("time").isEmpty())
                             
                    jComboBox5.addItem(rs.getString("time"));   }
                }
                con.close();
                 }catch(Exception e){ System.out.println(e);}  

        

// TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox3ItemStateChanged
jComboBox5.removeAllItems();

String teacher=(String)(jComboBox1.getSelectedItem());
                             String classroom=(String)(jComboBox3.getSelectedItem());

         String day=(String)(jComboBox4.getSelectedItem());
         try{  
            Class.forName("com.mysql.jdbc.Driver");  
            Connection con=DriverManager.getConnection(  
                "jdbc:mysql://localhost:3306/timetable?zeroDateTimeBehavior=convertToNull","root","");  
                Statement stmt=con.createStatement();  
                ResultSet rs=stmt.executeQuery("select time from timeslots where ID NOT in( select timeid from clashtime where (teacher = '"+teacher+
                       "' or class = '"+classroom+"' or teacher='"+tableName+ "' )  and day = '"+day+"')");  
                
                while(rs.next())  
                {
                       {if(!rs.getString("time").isEmpty())
                             
                    jComboBox5.addItem(rs.getString("time"));   }
                }
                con.close();
                 }catch(Exception e){ System.out.println(e);}  




        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ItemStateChanged

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
jComboBox5.removeAllItems();

String teacher=(String)(jComboBox1.getSelectedItem());
                             String classroom=(String)(jComboBox3.getSelectedItem());

         String day=(String)(jComboBox4.getSelectedItem());
         try{  
            Class.forName("com.mysql.jdbc.Driver");  
            Connection con=DriverManager.getConnection(  
                "jdbc:mysql://localhost:3306/timetable?zeroDateTimeBehavior=convertToNull","root","");  
                Statement stmt=con.createStatement();  
                ResultSet rs=stmt.executeQuery("select time from timeslots where ID NOT in( select timeid from clashtime where day = '"+day+"')");  
                
                while(rs.next())  
                {
                       {if(!rs.getString("time").isEmpty())
                             
                    jComboBox5.addItem(rs.getString("time"));   }
                }
                con.close();
                 }catch(Exception e){ System.out.println(e);} 

        
        jComboBox1.setEnabled(false);
jComboBox2.setEnabled(false);
jComboBox3.setEnabled(false);


        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox5ActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
